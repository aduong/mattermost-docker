databases:
- name: mattermost

services:
- type: web
  name: mattermost-web
  env: docker
  dockerfilePath: ./web/Dockerfile
  dockerContext: ./web
  envVars:
  - key: APP_HOST
    fromService:
      type: pserv
      name: mattermost-backend
      property: host
  - key: APP_PORT_NUMBER
    fromService:
      type: pserv
      name: mattermost-backend
      property: port

- type: pserv
  name: mattermost-minio
  env: docker
  dockerfilePath: ./minio/Dockerfile
  dockerContext: ./minio
  disk:
    name: data
    mountPath: /data
  envVars:
  - key: MINIO_REGION
    value: us-west-1
  - key: MINIO_ACCESS_KEY
    value: 9DG1XAAGFDOB39WK217V
  - key: MINIO_SECRET_KEY
    generated: true


- type: pserv
  name: mattermost-backend
  env: docker
  dockerfilePath: ./app/Dockerfile
  dockerContext: ./app
  disk:
    name: config
    mountPath: /mattermost/config
  envVars:
  - key: edition
    value: team
  - key: MM_USERNAME
    fromDatabase:
      name: mattermost
      property: user
  - key: MM_PASSWORD
    fromDatabase:
      name: mattermost
      property: password
  - key: MM_DBNAME
    fromDatabase:
      name: mattermost
      property: database
  - key: DB_HOST
    fromDatabase:
      name: mattermost
      property: host
  - key: MM_SERVICESETTINGS_LISTENADDRESS
    value: ":10000"
  - key: MM_FILESETTINGS_DRIVERNAME
    value: amazons3
  - key: MM_FILESETTINGS_AMAZONS3BUCKET
    value: mattermost
  - key: MM_FILESETTINGS_AMAZONS3REGION
    value: us-west-1
  - key: MM_FILESETTINGS_AMAZONS3ACCESSKEYID
    value: 9DG1XAAGFDOB39WK217V
  - key: MM_FILESETTINGS_AMAZONS3SECRETACCESSKEY
    sync: false
  - key: MM_FILESETTINGS_AMAZONS3HOST
    fromService:
      type: pserv
      name: mattermost-minio
      property: host
  - key: MM_FILESETTINGS_AMAZONS3PORT
    fromService:
      type: pserv
      name: mattermost-minio
      property: port
  - key: MM_FILESETTINGS_AMAZONS3SSL
    value: "false"
